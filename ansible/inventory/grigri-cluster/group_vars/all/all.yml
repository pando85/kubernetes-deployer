---
ansible_user: agil

## Disable write IPs in /etc/hosts
populate_inventory_to_hosts_file: false

## Directory where etcd data stored
etcd_data_dir: /var/lib/etcd

## Experimental kubeadm etcd deployment mode. Available only for new deployment
etcd_kubeadm_enabled: false

## Directory where the binaries will be installed
bin_dir: /usr/local/bin

## The access_ip variable is used to define how other nodes should access
## the node.  This is used in flannel to allow other flannel nodes to see
## this node for example.  The access_ip is really useful AWS and Google
## environments where the nodes are accessed remotely by the "public" ip,
## but don't know about that address themselves.
# access_ip: 1.1.1.1


## External LB example config
apiserver_loadbalancer_domain_name: "kubernetes.grigri"
loadbalancer_apiserver:
  address: 192.168.1.10
  port: 6443

## Internal loadbalancers for apiservers
loadbalancer_apiserver_localhost: false
# valid options are "nginx" or "haproxy"
# loadbalancer_apiserver_type: nginx # valid values "nginx" or "haproxy"

## Local loadbalancer should use this port
## And must be set port 6443
loadbalancer_apiserver_port: 6443

## If loadbalancer_apiserver_healthcheck_port variable defined, enables proxy liveness check for nginx.
loadbalancer_apiserver_healthcheck_port: 8081

### OTHER OPTIONAL VARIABLES
## For some things, kubelet needs to load kernel modules.  For example, dynamic kernel services are needed
## for mounting persistent volumes into containers.  These may not be loaded by preinstall kubernetes
## processes.  For example, ceph and rbd backed volumes.  Set to true to allow kubelet to load kernel
## modules.
kubelet_load_modules: true

## Upstream dns servers
upstream_dns_servers:
  - 192.168.1.1

searchdomains:
  - grigri
## There are some changes specific to the cloud providers
## for instance we need to encapsulate packets with some network plugins
## If set the possible values are either 'gce', 'aws', 'azure', 'openstack', 'vsphere', 'oci', or 'external'
## When openstack is used make sure to source in the openstack credentials
## like you would do when using openstack-client before starting the playbook.
## Note: The 'external' cloud provider is not supported.
## TODO(riverzhang): https://kubernetes.io/docs/tasks/administer-cluster/running-cloud-controller/#running-cloud-controller-manager
# cloud_provider:

## Set these proxy values in order to update package manager and docker daemon to use proxies
# http_proxy: ""
# https_proxy: ""

## Refer to roles/kubespray-defaults/defaults/main.yml before modifying no_proxy
# no_proxy: ""

## Some problems may occur when downloading files over https proxy due to ansible bug
## https://github.com/ansible/ansible/issues/32750. Set this variable to False to disable
## SSL validation of get_url module. Note that kubespray will still be performing checksum validation.
# download_validate_certs: False

## If you need exclude all cluster nodes from proxy and other resources, add other resources here.
# additional_no_proxy: ""

## Certificate Management
## This setting determines whether certs are generated via scripts.
## Chose 'none' if you provide your own certificates.
## Option is  "script", "none"
## note: vault is removed
cert_management: script

custom_cas:
  - name: grigri
    cert: |
      -----BEGIN CERTIFICATE-----
      MIIEOTCCAyGgAwIBAgIBADANBgkqhkiG9w0BAQsFADBxMQswCQYDVQQGEwJFUzEP
      MA0GA1UECBMGTWFkcmlkMQ8wDQYDVQQHEwZNYWRyaWQxDzANBgNVBAoTBmdyaWdy
      aTEhMB8GCSqGSIb3DQEJARYScGFuZG84NTVAZ21haWwuY29tMQwwCgYDVQQDEwNW
      UE4wHhcNMTcwNDIzMDgwNjI1WhcNMjcwNDIxMDgwNjI1WjBxMQswCQYDVQQGEwJF
      UzEPMA0GA1UECBMGTWFkcmlkMQ8wDQYDVQQHEwZNYWRyaWQxDzANBgNVBAoTBmdy
      aWdyaTEhMB8GCSqGSIb3DQEJARYScGFuZG84NTVAZ21haWwuY29tMQwwCgYDVQQD
      EwNWUE4wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC1WrvmJamQlK9G
      dcRrBgkBuSwvCPz1ezbOcjd39Hf0GRfeZqLhD3fs1Mv+RNriBDMuG4enh+CV1QAo
      44nxsawHDbHRuePXcmoh1bjT59AVmL5AlnuFfi2X/69YpDSVSl0P0RSFxysSTzZz
      67Ex/NIt8I5eBTG/ed3yGMXOztGNn0XSMZ1VRs1dS9YB5uMOUmAbJgBWmbb9alQB
      ljs5beOGezJcJHuKY24MMPyAFUfij1NvPOFOeMbFhxTxceBPA3Mp513xYgl6Eucp
      kLS9oeStYObJiLS4Mx1jZR2LISiU5h4+mG142HXFBRxjhM4wgqM1N+Dqu+pRpsCW
      eEbtzlRNAgMBAAGjgdswgdgwHQYDVR0OBBYEFBmwRtVkPDh1nHndbYYxk/U4u5OO
      MIGbBgNVHSMEgZMwgZCAFBmwRtVkPDh1nHndbYYxk/U4u5OOoXWkczBxMQswCQYD
      VQQGEwJFUzEPMA0GA1UECBMGTWFkcmlkMQ8wDQYDVQQHEwZNYWRyaWQxDzANBgNV
      BAoTBmdyaWdyaTEhMB8GCSqGSIb3DQEJARYScGFuZG84NTVAZ21haWwuY29tMQww
      CgYDVQQDEwNWUE6CAQAwDAYDVR0TBAUwAwEB/zALBgNVHQ8EBAMCAQYwDQYJKoZI
      hvcNAQELBQADggEBAJd02ob4xmgngDS+vLmJsTqb5sXSWsa5TvfIZrdj0b24I21s
      IE5+Ju9TKcUZptPF8wu3gHXesYDGuaTLIBf2dfpx6PNg+cGyFKlowVia+ag6BqxE
      saZpQSC6/w8irc47+ZzEOGqJjUQT1WCXXNXMfSNR3PflrS+PVq11a2mwQRjUyOBt
      1vU/ZwDe2nfohQTkcCHgzk9a+rnjpUh6SW0nn5sd91khOf2dqqwmy8Q8q6dbg75f
      3yldsQKIOTcn9yu0vjE+PgIoXll8nCHoe+4vGXXGaBwLgYzTRP4FPpTt9pB52A4r
      fU4KqEv/GTabVBmyUg0VV9fq0LT+IO+aKFmIIFI=
      -----END CERTIFICATE-----

## Set to true to allow pre-checks to fail and continue deployment
# ignore_assert_errors: false

## The read-only port for the Kubelet to serve on with no authentication/authorization. Uncomment to enable.
# kube_read_only_port: 10255

## Set true to download and cache container
# download_container: true

## Deploy container engine
# Set false if you want to deploy container engine manually.
deploy_container_engine: true

## Set Pypi repo and cert accordingly
# pyrepo_index: https://pypi.example.com/simple
# pyrepo_cert: /etc/ssl/certs/ca-certificates.crt
