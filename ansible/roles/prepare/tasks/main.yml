---

- name: Check if python is needed
  raw: which python
  register: need_python
  failed_when: false
  changed_when: false

- name: Check if python3 is installed
  raw: which python3
  register: need_python3
  failed_when: false
  changed_when: false

- name: Create a symbolic link
  file:
    src: "{{ need_python3.stdout_lines | first }}"
    dest: /usr/bin/python
    state: link
  when:
    - need_python.rc != 0
    - need_python3.rc == 0

- name: "Add group {{ prepare_username }}"
  group:
    name: "{{ prepare_username }}"
    gid: 1000

- name: "Add user {{ prepare_username }}"
  user:
    name: "{{ prepare_username }}"
    shell: /bin/bash
    uid: 1000
    groups: "sudo,{{ prepare_username }}"
    append: yes

- name: Configure vim as default editor
  copy:
    content: "export EDITOR=vi"
    dest: /etc/profile.d/editor.sh

- name: Allow sudo without password
  lineinfile:
    path: /etc/sudoers
    regexp: "^%sudo"
    line: "%sudo   ALL=(ALL:ALL) NOPASSWD:ALL"

- name: Set authorized keys
  authorized_key:
    user: "{{ prepare_username }}"
    state: present
    key: "{{ item }}"
  loop: "{{ prepare_public_keys }}"

- name: Disable root login
  lineinfile:
    path: /etc/ssh/sshd_config
    regex: "^(# *)?PermitRootLogin"
    line: "PermitRootLogin no"
  notify: restart sshd

- name: Generate new machine-id
  shell: >
    rm /etc/machine-id && dbus-uuidgen --ensure=/etc/machine-id &&
    rm /var/lib/dbus/machine-id; dbus-uuidgen --ensure && touch /etc/machine-id-new
  args:
    creates: /etc/machine-id-new
  register: first_execution

- name: First execution
  when: first_execution.changed
  block:
  - name: Change user password
    user:
      name: "{{ prepare_username }}"
      password: "{{ prepare_password }}"
      update_password: always
    when: prepare_password is defined

  - name: Upgrade all packages to the latest version
    apt:
      name: "*"
      state: latest
      force_apt_get: true
      update_cache: true

- name: Disable unused services
  systemd:
    name: "{{ item }}"
    enabled: false
    state: stopped
  loop: "{{ prepare_unused_services }}"
  ignore_errors: true

- name: Install basic packages
  apt:
    name: "{{ prepare_basic_packages }}"
    state: latest
    force_apt_get: true
    update_cache: true

- name: Remove unused cron
  file:
    state: absent
    path: /etc/cron.d/make_nas_processes_faster

- name: Add CA to CA trust
  copy:
    content: "{{ item.cert }}"
    dest: "/usr/local/share/ca-certificates/{{ item.name }}.crt"
  when:
    - custom_cas is defined
  loop: "{{ custom_cas }}"
  tags:
    - custom-cas
  notify: update-ca-certificates

- name: "Additional storage"
  import_tasks: aditional_disk.yml
  when: prepare_additional_disk
  tags:
    - aditional-disk
