---
apiVersion: v1
kind: ConfigMap
metadata:
  name: netdata-conf-slave
  namespace: netdata
  labels:
    app: netdata
data:
  coredns:     |
      update_every: 1
      autodetection_retry: 0
      jobs:
        - url: http://127.0.0.1:9153/metrics

  kubelet:     |
      update_every: 1
      autodetection_retry: 0
      jobs:
        - url: http://127.0.0.1:10255/metrics

  kubeproxy:     |
      update_every: 1
      autodetection_retry: 0
      jobs:
        - url: http://127.0.0.1:10249/metrics

  smartd:     |
      local:
        log_path: '/host/var/log/smartd'

  netdata:     |
      [global]
        memory mode = none
      [health]
        enabled = no

  stream:     |
      [stream]
        enabled = yes
        destination = netdata:19999
        api key = __NETDATA_API_KEY__
        timeout seconds = 60
        buffer size bytes = 1048576
        reconnect delay seconds = 5
        initial clock resync iterations = 60


---
apiVersion: v1
kind: ConfigMap
metadata:
  name: netdata-conf-master
  namespace: netdata
  labels:
    app: netdata
data:
  health:     |
      SEND_TELEGRAM="YES"
      TELEGRAM_BOT_TOKEN="__TELEGRAM_BOT_TOKEN__"
      DEFAULT_RECIPIENT_TELEGRAM="7055881"

  disk_temperature:     |
      alarm: disks_temperature
      on: smartd_log_local.temperature_celsius
      lookup: average -1s foreach *
      units: celsius
      every: 1m
      warn: $this > 38
      crit: $this > 40
      info: disk temperature

  netdata:     |
      [global]
        memory mode = dbengine
        bind to = 0.0.0.0:19999
      [plugins]
        cgroups = no
        tc = no
        enable running new plugins = no
        check for new plugins every = 72000
        python.d = no
        charts.d = no
        go.d = no
        node.d = no
        apps = no
        proc = no
        idlejitter = no
        diskspace = no

  stream:     |
      [__NETDATA_API_KEY__]
        enabled = yes
        default history = 86400
        default memory mode = dbengine
        health enabled by default = auto
        allow from = *
