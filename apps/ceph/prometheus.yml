---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rook-prometheus
  namespace: rook-ceph

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleList
items:
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    name: rook-prometheus
    namespace: rook-ceph
  rules:
  - apiGroups:
    - ""
    resources:
    - services
    - endpoints
    - pods
    verbs:
    - get
    - list
    - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBindingList
items:
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: rook-prometheus
    namespace: rook-ceph
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: rook-prometheus
  subjects:
  - kind: ServiceAccount
    name: rook-prometheus
    namespace: rook-ceph
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: rook-prometheus
    namespace: monitoring
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: prometheus-k8s
  subjects:
  - kind: ServiceAccount
    name: rook-prometheus
    namespace: rook-ceph

---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  labels:
    prometheus: rook-prometheus
  name: rook-prometheus
  namespace: rook-ceph
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: node-role.kubernetes.io/master
            operator: DoesNotExist
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: prometheus
              operator: In
              values:
              - rook-prometheus
          namespaces:
          - rook-ceph
          topologyKey: kubernetes.io/hostname
        weight: 100
  alerting:
    alertmanagers:
    - name: alertmanager-main
      namespace: monitoring
      port: web
  baseImage: prom/prometheus
  externalUrl: https://rook-prometheus.k8s.grigri
  nodeSelector:
    kubernetes.io/os: linux
  podMonitorSelector: {}
  replicas: 1
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 512Mi
  retention: 7d
  ruleSelector:
    matchLabels:
      role: alert-rules
      prometheus: rook-prometheus
  securityContext:
    fsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: rook-prometheus
  serviceMonitorNamespaceSelector: {}
  serviceMonitorSelector:
    matchLabels:
      team: rook
  version: v2.13.1
  storage:
    volumeClaimTemplate:
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    team: rook
    prometheus: k8s
  name: rook-prometheus
  namespace: rook-ceph
spec:
  endpoints:
  - interval: 30s
    port: web
  selector:
    matchLabels:
      prometheus: rook-prometheus

---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    prometheus: rook-prometheus
    role: alert-rules
  name: prometheus-rook-meta-monitoring
  namespace: rook-ceph
spec:
  groups:
  - name: prometheus-meta-monitoring
    rules:
    - alert: PrometheusK8sDown
      annotations:
        message: Prometheus K8s has disappeared from Prometheus Rook target discovery.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusdown
      expr: |
        absent(up{job="prometheus-k8s",namespace="monitoring"} == 1)
      for: 15m
      labels:
        severity: critical
    - alert: PrometheusRookDown
      annotations:
        message: Prometheus Rook has disappeared from Prometheus Rook target discovery.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusdown
      expr: |
        absent(up{job="rook-prometheus",namespace="rook-ceph"} == 1)
      for: 15m
      labels:
        severity: critical


---
apiVersion: v1
kind: Service
metadata:
  labels:
    prometheus: rook-prometheus
  name: rook-prometheus
  namespace: rook-ceph
spec:
  ports:
  - name: web
    port: 9090
    targetPort: web
  selector:
    app: prometheus
    prometheus: rook-prometheus
  sessionAffinity: ClientIP

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: rook-prometheus
  namespace: rook-ceph
  annotations:
    kubernetes.io/ingress.class: nginx-internal
    certmanager.k8s.io/cluster-issuer: "internal"
    prometheus.io/probe: "true"
spec:
  tls:
  - hosts:
    - rook-prometheus.k8s.grigri
    secretName: rook-prometheus-tls
  rules:
  - host: rook-prometheus.k8s.grigri
    http:
      paths:
      - path: /
        backend:
          serviceName: rook-prometheus
          servicePort: web

