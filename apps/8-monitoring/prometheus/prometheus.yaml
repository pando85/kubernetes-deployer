apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  labels:
    prometheus: k8s
  name: k8s
  namespace: monitoring
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: node-role.kubernetes.io/master
            operator: DoesNotExist
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: prometheus
              operator: In
              values:
              - k8s
          namespaces:
          - monitoring
          topologyKey: kubernetes.io/hostname
        weight: 100
  alerting:
    alertmanagers:
    - name: alertmanager-main
      namespace: monitoring
      port: web
  baseImage: prom/prometheus
  externalUrl: https://prometheus.k8s.grigri
  nodeSelector:
    kubernetes.io/os: linux
  podMonitorSelector: {}
  additionalScrapeConfigs:
    name: blackbox-scrape
    key: blackbox.yaml
  replicas: 2
  resources:
    requests:
      cpu: 1000m
      memory: 1024Mi
    limits:
      cpu: 2000m
      memory: 2048Mi
  retention: 7d
  ruleSelector:
    matchLabels:
      role: alert-rules
    matchExpressions:
      - {key: prometheus, operator: In, values: [k8s, rook-prometheus]}
  securityContext:
    fsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000
  secrets:
    - etcd-client
  serviceAccountName: prometheus-k8s
  serviceMonitorNamespaceSelector: {}
  serviceMonitorSelector: {}
  version: v2.13.1
  storage:
    volumeClaimTemplate:
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 30Gi

