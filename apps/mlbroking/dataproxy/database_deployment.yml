---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dataproxy-database
  namespace: mlbroking
  labels:
    app: dataproxy
    tier: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dataproxy
      tier: database
  template:
    metadata:
      labels:
        app: dataproxy
        tier: database
    spec:
      containers:
        - name: postgres
          image: postgres:12.1
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: dataproxy-database
                  key: database
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: dataproxy-database
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: dataproxy-database
                  key: password
            # Fix: https://github.com/docker-library/postgres/issues/116
            # can't chown nfs mount
            - name: PGDATA
              value: /var/lib/postgresql/data/mydata
          resources:
            limits:
              cpu: 1
              memory: 512M
            requests:
              cpu: 500m
              memory: 256M
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - exec pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h 127.0.0.1
            initialDelaySeconds: 240
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - exec pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h 127.0.0.1
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          securityContext:
            # postgres -> 999
            runAsUser: 999
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-data
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: dataproxy-claim
