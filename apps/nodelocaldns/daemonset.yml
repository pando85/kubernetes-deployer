apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    deprecated.daemonset.template.generation: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kube-dns","kubernetes.io/cluster-service":"true"},"name":"nodelocaldns","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"k8s-app":"nodelocaldns"}},"template":{"metadata":{"annotations":{"prometheus.io/port":"9253","prometheus.io/scrape":"true"},"labels":{"k8s-app":"nodelocaldns"}},"spec":{"containers":[{"args":["-localip","169.254.25.10","-conf","/etc/coredns/Corefile"],"image":"k8s.gcr.io/k8s-dns-node-cache:1.15.4-2","livenessProbe":{"failureThreshold":10,"httpGet":{"host":"169.254.25.10","path":"/health","port":9254,"scheme":"HTTP"},"successThreshold":1,"timeoutSeconds":5},"name":"node-cache","ports":[{"containerPort":53,"name":"dns","protocol":"UDP"},{"containerPort":53,"name":"dns-tcp","protocol":"TCP"},{"containerPort":9253,"name":"metrics","protocol":"TCP"}],"readinessProbe":{"failureThreshold":10,"httpGet":{"host":"169.254.25.10","path":"/health","port":9254,"scheme":"HTTP"},"successThreshold":1,"timeoutSeconds":5},"resources":{"limits":{"memory":"170Mi"},"requests":{"cpu":"100m","memory":"70Mi"}},"securityContext":{"privileged":true},"volumeMounts":[{"mountPath":"/etc/coredns","name":"config-volume"},{"mountPath":"/run/xtables.lock","name":"xtables-lock"}]}],"dnsPolicy":"Default","hostNetwork":true,"priorityClassName":"system-cluster-critical","serviceAccountName":"nodelocaldns","terminationGracePeriodSeconds":0,"tolerations":[{"effect":"NoSchedule","operator":"Exists"},{"effect":"NoExecute","operator":"Exists"},{"key":"CriticalAddonsOnly","operator":"Exists"}],"volumes":[{"configMap":{"items":[{"key":"Corefile","path":"Corefile"}],"name":"nodelocaldns"},"name":"config-volume"},{"hostPath":{"path":"/run/xtables.lock","type":"FileOrCreate"},"name":"xtables-lock"}]}},"updateStrategy":{"rollingUpdate":{"maxUnavailable":"20%"},"type":"RollingUpdate"}}}
  creationTimestamp: "2019-08-17T18:09:54Z"
  generation: 1
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
  name: nodelocaldns
  namespace: kube-system
  resourceVersion: "269451"
  selfLink: /apis/apps/v1/namespaces/kube-system/daemonsets/nodelocaldns
  uid: 0599f8fd-18ff-41c9-a517-4b88900ce155
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: nodelocaldns
  template:
    metadata:
      annotations:
        prometheus.io/port: "9253"
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        k8s-app: nodelocaldns
    spec:
      containers:
      - args:
        - -localip
        - 169.254.25.10
        - -conf
        - /etc/coredns/Corefile
        image: k8s.gcr.io/k8s-dns-node-cache:1.15.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 169.254.25.10
            path: /health
            port: 9254
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: node-cache
        ports:
        - containerPort: 53
          hostPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          hostPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9253
          hostPort: 9253
          name: metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 10
          httpGet:
            host: 169.254.25.10
            path: /health
            port: 9254
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
        - mountPath: /run/xtables.lock
          name: xtables-lock
      dnsPolicy: Default
      hostNetwork: true
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: nodelocaldns
      serviceAccountName: nodelocaldns
      terminationGracePeriodSeconds: 0
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - effect: NoExecute
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: Corefile
            path: Corefile
          name: nodelocaldns
        name: config-volume
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 20%
    type: RollingUpdate
status:
  currentNumberScheduled: 4
  desiredNumberScheduled: 4
  numberAvailable: 4
  numberMisscheduled: 0
  numberReady: 4
  observedGeneration: 1
  updatedNumberScheduled: 4
